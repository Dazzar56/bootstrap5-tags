{
  "version": 3,
  "sources": ["tags.js"],
  "sourcesContent": ["/**\r\n * Bootstrap 5 (and 4!) tags\r\n *\r\n * Turns your select[multiple] into nice tags lists\r\n *\r\n * Required Bootstrap 5 styles:\r\n * - badge\r\n * - background-color utility\r\n * - margin-end utility\r\n * - float-start utility\r\n * - forms\r\n * - dropdown\r\n */\r\n\r\n// #region config\r\n\r\n/**\r\n * @callback EventCallback\r\n * @param {Event} event\r\n * @param {Tags} inst\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback ServerCallback\r\n * @param {Response} response\r\n * @param {Tags} inst\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * @callback RenderCallback\r\n * @param {Suggestion} item\r\n * @param {String} label\r\n * @param {Tags} inst\r\n * @returns {String}\r\n */\r\n\r\n/**\r\n * @callback ItemCallback\r\n * @param {Suggestion} item\r\n * @param {Tags} inst\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback ValueCallback\r\n * @param {String} value\r\n * @param {Tags} inst\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback AddCallback\r\n * @param {String} value\r\n * @param {Object} data\r\n * @param {Tags} inst\r\n * @returns {void|Boolean}\r\n */\r\n\r\n/**\r\n * @callback CreateCallback\r\n * @param {HTMLOptionElement} option\r\n * @param {Tags} inst\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @typedef Config\r\n * @property {Boolean} allowNew Allows creation of new tags\r\n * @property {Boolean} showAllSuggestions Show all suggestions even if they don't match. Disables validation.\r\n * @property {String} badgeStyle Color of the badge (color can be configured per option as well)\r\n * @property {Boolean} allowClear Show a clear icon\r\n * @property {Boolean} clearEnd Place clear icon at the end\r\n * @property {Array|String} selected A comma separated list of selected values\r\n * @property {String} regex Regex for new tags\r\n * @property {Array|String} separator A list (pipe separated) of characters that should act as separator (default is using enter key)\r\n * @property {Number} max Limit to a maximum of tags (0 = no limit)\r\n * @property {String} placeholder Provides a placeholder if none are provided as the first empty option\r\n * @property {String} clearLabel Text as clear tooltip\r\n * @property {String} searchLabel Default placeholder\r\n * @property {Boolean} keepOpen Keep suggestions open after selection, clear on focus out\r\n * @property {Boolean} allowSame Allow same tags used multiple times\r\n * @property {String} baseClass Customize the class applied to badges\r\n * @property {Boolean} addOnBlur Add new tags on blur (only if allowNew is enabled)\r\n * @property {Boolean} showDisabled Show disabled tags\r\n * @property {Boolean} hideNativeValidation Hide native validation tooltips\r\n * @property {Number} suggestionsThreshold Number of chars required to show suggestions\r\n * @property {Number} maximumItems Maximum number of items to display\r\n * @property {Boolean} autoselectFirst Always select the first item\r\n * @property {Boolean} updateOnSelect Update input value on selection (doesn't play nice with autoselectFirst)\r\n * @property {Boolean} highlightTyped Highlight matched part of the suggestion\r\n * @property {Boolean} fullWidth Match the width on the input field\r\n * @property {Boolean} fixed Use fixed positioning (solve overflow issues)\r\n * @property {Boolean} fuzzy Fuzzy search\r\n * @property {Array} activeClasses By default: [\"bg-primary\", \"text-white\"]\r\n * @property {String} labelField Key for the label\r\n * @property {String} valueField Key for the value\r\n * @property {Array} searchFields Key for the search\r\n * @property {String} queryParam Name of the param passed to endpoint (query by default)\r\n * @property {String} server Endpoint for data provider\r\n * @property {String} serverMethod HTTP request method for data provider, default is GET\r\n * @property {String|Object} serverParams Parameters to pass along to the server. You can specify a \"related\" key with the id of a related field.\r\n * @property {String} serverDataKey By default: data\r\n * @property {Object} fetchOptions Any other fetch options (https://developer.mozilla.org/en-US/docs/Web/API/fetch#syntax)\r\n * @property {Boolean} liveServer Should the endpoint be called each time on input\r\n * @property {Boolean} noCache Prevent caching by appending a timestamp\r\n * @property {Number} debounceTime Debounce time for live server\r\n * @property {String} notFoundMessage Display a no suggestions found message. Leave empty to disable\r\n * @property {RenderCallback} onRenderItem Callback function that returns the suggestion\r\n * @property {ItemCallback} onSelectItem Callback function to call on selection\r\n * @property {ValueCallback} onClearItem Callback function to call on clear\r\n * @property {CreateCallback} onCreateItem Callback function when an item is created\r\n * @property {EventCallback} onBlur Callback function on blur\r\n * @property {EventCallback} onFocus Callback function on focus\r\n * @property {AddCallback} onCanAdd Callback function to validate item. Return false to show validation message.\r\n * @property {ServerCallback} onServerResponse Callback function to process server response. Must return a Promise\r\n */\r\n\r\n/**\r\n * @typedef Suggestion\r\n * @property {String} value Can be overriden by config valueField\r\n * @property {String} label Can be overriden by config labelField\r\n * @property {Boolean} disabled\r\n * @property {Object} data\r\n * @property {Boolean} [selected]\r\n * @property {Number} [group_id]\r\n */\r\n\r\n/**\r\n * @typedef SuggestionGroup\r\n * @property {String} group\r\n * @property {Array} items\r\n */\r\n\r\n/**\r\n * @type {Config}\r\n */\r\nconst DEFAULTS = {\r\n  allowNew: false,\r\n  showAllSuggestions: false,\r\n  badgeStyle: \"primary\",\r\n  allowClear: false,\r\n  clearEnd: false,\r\n  selected: [],\r\n  regex: \"\",\r\n  separator: [],\r\n  max: 0,\r\n  clearLabel: \"Clear\",\r\n  searchLabel: \"Type a value\",\r\n  keepOpen: false,\r\n  allowSame: false,\r\n  baseClass: \"\",\r\n  placeholder: \"\",\r\n  addOnBlur: false,\r\n  showDisabled: false,\r\n  hideNativeValidation: false,\r\n  suggestionsThreshold: 1,\r\n  maximumItems: 0,\r\n  autoselectFirst: true,\r\n  updateOnSelect: false,\r\n  highlightTyped: false,\r\n  fullWidth: false,\r\n  fixed: false,\r\n  fuzzy: false,\r\n  activeClasses: [\"bg-primary\", \"text-white\"],\r\n  labelField: \"label\",\r\n  valueField: \"value\",\r\n  searchFields: [\"label\"],\r\n  queryParam: \"query\",\r\n  server: \"\",\r\n  serverMethod: \"GET\",\r\n  serverParams: {},\r\n  serverDataKey: \"data\",\r\n  fetchOptions: {},\r\n  liveServer: false,\r\n  noCache: true,\r\n  debounceTime: 300,\r\n  notFoundMessage: \"\",\r\n  onRenderItem: (item, label, inst) => {\r\n    return label;\r\n  },\r\n  onSelectItem: (item, inst) => {},\r\n  onClearItem: (value, inst) => {},\r\n  onCreateItem: (option, inst) => {},\r\n  onBlur: (event, inst) => {},\r\n  onFocus: (event, inst) => {},\r\n  onCanAdd: (text, data, inst) => {},\r\n  onServerResponse: (response, inst) => {\r\n    return response.json();\r\n  },\r\n};\r\n\r\n// #endregion\r\n\r\n// #region constants\r\n\r\nconst CLASS_PREFIX = \"tags-\";\r\nconst LOADING_CLASS = \"is-loading\";\r\nconst ACTIVE_CLASS = \"is-active\";\r\nconst INVALID_CLASS = \"is-invalid\";\r\nconst SHOW_CLASS = \"show\";\r\nconst VALUE_ATTRIBUTE = \"data-value\";\r\nconst NEXT = \"next\";\r\nconst PREV = \"prev\";\r\nconst FOCUS_CLASS = \"form-control-focus\"; // should match form-control:focus\r\nconst PLACEHOLDER_CLASS = \"form-placeholder-shown\"; // should match :placeholder-shown\r\nconst DISABLED_CLASS = \"form-control-disabled\"; // should match form-control:disabled\r\nconst INSTANCE_MAP = new WeakMap();\r\nlet counter = 0;\r\n\r\n// #endregion\r\n\r\n// #region functions\r\n\r\n/**\r\n * @param {Function} func\r\n * @param {number} timeout\r\n * @returns {Function}\r\n */\r\nfunction debounce(func, timeout = 300) {\r\n  let timer;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      //@ts-ignore\r\n      func.apply(this, args);\r\n    }, timeout);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @param {string} size\r\n * @returns {Number}\r\n */\r\nfunction calcTextWidth(text, size = null) {\r\n  const span = ce(\"span\");\r\n  document.body.appendChild(span);\r\n  span.style.fontSize = size || \"inherit\";\r\n  span.style.height = \"auto\";\r\n  span.style.width = \"auto\";\r\n  span.style.position = \"absolute\";\r\n  span.style.whiteSpace = \"no-wrap\";\r\n  span.innerHTML = text;\r\n  const width = Math.ceil(span.clientWidth);\r\n  document.body.removeChild(span);\r\n  return width;\r\n}\r\n\r\n/**\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nfunction removeDiacritics(str) {\r\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n}\r\n\r\n/**\r\n * @param {String|Number} str\r\n * @returns {String}\r\n */\r\nfunction normalize(str) {\r\n  if (!str) {\r\n    return \"\";\r\n  }\r\n  return removeDiacritics(str.toString()).toLowerCase();\r\n}\r\n\r\n/**\r\n * A simple fuzzy match algorithm that checks if chars are matched\r\n * in order in the target string\r\n *\r\n * @param {String} str\r\n * @param {String} lookup\r\n * @returns {Boolean}\r\n */\r\nfunction fuzzyMatch(str, lookup) {\r\n  if (str.indexOf(lookup) >= 0) {\r\n    return true;\r\n  }\r\n  let pos = 0;\r\n  for (let i = 0; i < lookup.length; i++) {\r\n    const c = lookup[i];\r\n    if (c == \" \") continue;\r\n    pos = str.indexOf(c, pos) + 1;\r\n    if (pos <= 0) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} item\r\n */\r\nfunction hideItem(item) {\r\n  item.style.display = \"none\";\r\n  attrs(item, {\r\n    \"aria-hidden\": \"true\",\r\n  });\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} item\r\n */\r\nfunction showItem(item) {\r\n  item.style.display = \"list-item\";\r\n  attrs(item, {\r\n    \"aria-hidden\": \"false\",\r\n  });\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {Object} attrs\r\n */\r\nfunction attrs(el, attrs) {\r\n  for (const [k, v] of Object.entries(attrs)) {\r\n    el.setAttribute(k, v);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {string} attr\r\n */\r\nfunction rmAttr(el, attr) {\r\n  if (el.hasAttribute(attr)) {\r\n    el.removeAttribute(attr);\r\n  }\r\n}\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} K\r\n * @param {K|String} tagName Name of the element\r\n * @returns {HTMLElementTagNameMap[K]}\r\n */\r\nfunction ce(tagName) {\r\n  //@ts-ignore\r\n  return document.createElement(tagName);\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {HTMLElement} newEl\r\n * @returns {HTMLElement}\r\n */\r\n// function insertAfter(el, newEl) {\r\n//   return el.parentNode.insertBefore(newEl, el.nextSibling);\r\n// }\r\n\r\n// #endregion\r\n\r\nclass Tags {\r\n  /**\r\n   * @param {HTMLSelectElement} el\r\n   * @param {Object|Config} config\r\n   */\r\n  constructor(el, config = {}) {\r\n    if (!(el instanceof HTMLElement)) {\r\n      console.error(\"Invalid element\", el);\r\n      return;\r\n    }\r\n    INSTANCE_MAP.set(el, this);\r\n    counter++;\r\n    this._selectElement = el;\r\n    this._willBlur = null;\r\n\r\n    this._configure(config);\r\n\r\n    // private vars\r\n    this._keyboardNavigation = false;\r\n    this._searchFunc = debounce(() => {\r\n      this._loadFromServer(true);\r\n    }, this._config.debounceTime);\r\n    this._fireEvents = true;\r\n\r\n    this._configureParent();\r\n\r\n    // Create elements\r\n    this._holderElement = ce(\"div\"); // this is the one holding the fake input and the dropmenu\r\n    this._containerElement = ce(\"div\"); // this is the one for the fake input (labels + input)\r\n    this._holderElement.appendChild(this._containerElement);\r\n\r\n    // insert before select, this helps having native validation tooltips positioned properly\r\n    this._selectElement.parentElement.insertBefore(this._holderElement, this._selectElement);\r\n    // insertAfter(this._selectElement, this._holderElement);\r\n\r\n    // Configure them\r\n    this._configureHolderElement();\r\n    this._configureContainerElement();\r\n    this._configureSelectElement();\r\n    this._configureSearchInput();\r\n    this._configureDropElement();\r\n    this.resetState();\r\n\r\n    if (this._config.fixed) {\r\n      document.addEventListener(\"scroll\", this, true); // capture input for all scrollables elements\r\n      window.addEventListener(\"resize\", this);\r\n    }\r\n\r\n    // Add listeners (remove then on dispose()). See handleEvent.\r\n    this._searchInput.addEventListener(\"focus\", this); // focusin bubbles, focus does not.\r\n    this._searchInput.addEventListener(\"blur\", this); // focusout bubbles, blur does not.\r\n    this._searchInput.addEventListener(\"input\", this);\r\n    this._searchInput.addEventListener(\"keydown\", this);\r\n    this._dropElement.addEventListener(\"mousemove\", this);\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  // #region Core\r\n\r\n  /**\r\n   * Attach to all elements matched by the selector\r\n   * @param {string} selector\r\n   * @param {Object} opts\r\n   */\r\n  static init(selector = \"select[multiple]\", opts = {}) {\r\n    /**\r\n     * @type {NodeListOf<HTMLSelectElement>}\r\n     */\r\n    let list = document.querySelectorAll(selector);\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (Tags.getInstance(list[i])) {\r\n        continue;\r\n      }\r\n      new Tags(list[i], opts);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLSelectElement} el\r\n   */\r\n  static getInstance(el) {\r\n    if (INSTANCE_MAP.has(el)) {\r\n      return INSTANCE_MAP.get(el);\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    this._searchInput.removeEventListener(\"focus\", this);\r\n    this._searchInput.removeEventListener(\"blur\", this);\r\n    this._searchInput.removeEventListener(\"input\", this);\r\n    this._searchInput.removeEventListener(\"keydown\", this);\r\n    this._dropElement.removeEventListener(\"mousemove\", this);\r\n\r\n    if (this._config.fixed) {\r\n      document.removeEventListener(\"scroll\", this, true);\r\n      window.removeEventListener(\"resize\", this);\r\n    }\r\n\r\n    // restore select, remove our custom stuff and unbind parent\r\n    this._selectElement.style.display = \"block\";\r\n    this._holderElement.parentElement.removeChild(this._holderElement);\r\n    if (this.parentForm) {\r\n      this.parentForm.removeEventListener(\"reset\", this);\r\n    }\r\n\r\n    INSTANCE_MAP.delete(this._selectElement);\r\n  }\r\n\r\n  /**\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\r\n   * @param {Event} event\r\n   */\r\n  handleEvent(event) {\r\n    // debounce scroll and resize\r\n    const debounced = [\"scroll\", \"resize\"];\r\n    if (debounced.includes(event.type)) {\r\n      if (this._timer) window.cancelAnimationFrame(this._timer);\r\n      this._timer = window.requestAnimationFrame(() => {\r\n        this[`on${event.type}`](event);\r\n      });\r\n    } else {\r\n      this[`on${event.type}`](event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Config|Object} config\r\n   */\r\n  _configure(config = {}) {\r\n    this._config = Object.assign({}, DEFAULTS);\r\n\r\n    // Handle options, using arguments first and data attr as override\r\n    const o = { ...config, ...this._selectElement.dataset };\r\n\r\n    // Allow 1/0, true/false as strings\r\n    const parseBool = (value) => [\"true\", \"false\", \"1\", \"0\", true, false].includes(value) && !!JSON.parse(value);\r\n\r\n    // Typecast provided options based on defaults types\r\n    for (const [key, defaultValue] of Object.entries(DEFAULTS)) {\r\n      // Check for undefined keys\r\n      if (o[key] === void 0) {\r\n        continue;\r\n      }\r\n      const value = o[key];\r\n      switch (typeof defaultValue) {\r\n        case \"number\":\r\n          this._config[key] = parseInt(value);\r\n          break;\r\n        case \"boolean\":\r\n          this._config[key] = parseBool(value);\r\n          break;\r\n        case \"string\":\r\n          this._config[key] = value.toString();\r\n          break;\r\n        case \"object\":\r\n          // Arrays have a type object in js\r\n          if (Array.isArray(defaultValue)) {\r\n            // string separator can be | or ,\r\n            const separator = value.includes(\"|\") ? \"|\" : \",\";\r\n            this._config[key] = typeof value === \"string\" ? value.split(separator) : value;\r\n          } else {\r\n            this._config[key] = typeof value === \"string\" ? JSON.parse(value) : value;\r\n          }\r\n          break;\r\n        case \"function\":\r\n          this._config[key] = typeof value === \"string\" ? value.split(\".\").reduce((r, p) => r[p], window) : value;\r\n          if (!this._config[key]) {\r\n            console.error(\"Invalid function\", value);\r\n          }\r\n          break;\r\n        default:\r\n          this._config[key] = value;\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Dynamic default values\r\n    if (!this._config.placeholder) {\r\n      this._config.placeholder = this._getPlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} k\r\n   * @returns {*}\r\n   */\r\n  config(k = null) {\r\n    return k ? this._config[k] : this._config;\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Html\r\n\r\n  /**\r\n   * Find overflow parent for positioning\r\n   * and bind reset event of the parent form\r\n   */\r\n  _configureParent() {\r\n    this.overflowParent = null;\r\n    this.parentForm = this._selectElement.parentElement;\r\n    while (this.parentForm) {\r\n      if (this.parentForm.style.overflow === \"hidden\") {\r\n        this.overflowParent = this.parentForm;\r\n      }\r\n      this.parentForm = this.parentForm.parentElement;\r\n      if (this.parentForm && this.parentForm.nodeName == \"FORM\") {\r\n        break;\r\n      }\r\n    }\r\n    if (this.parentForm) {\r\n      this.parentForm.addEventListener(\"reset\", this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  _getPlaceholder() {\r\n    // Use placeholder and data-placeholder in priority\r\n    if (this._selectElement.hasAttribute(\"placeholder\")) {\r\n      return this._selectElement.getAttribute(\"placeholder\");\r\n    }\r\n    if (this._selectElement.dataset.placeholder) {\r\n      return this._selectElement.dataset.placeholder;\r\n    }\r\n    // Fallback to first option if no value\r\n    let firstOption = this._selectElement.querySelector(\"option\");\r\n    if (!firstOption || !this._config.autoselectFirst) {\r\n      return \"\";\r\n    }\r\n    rmAttr(firstOption, \"selected\");\r\n    return !firstOption.value ? firstOption.textContent : \"\";\r\n  }\r\n\r\n  _configureSelectElement() {\r\n    // Hiding the select should keep it focusable, otherwise we get this\r\n    // An invalid form control with name='...' is not focusable.\r\n    // If it's not focusable, we need to remove the native validation attributes\r\n\r\n    // If we use display none, we don't get the focus event\r\n    // this._selectElement.style.display = \"none\";\r\n\r\n    // If we position it like this, the html5 validation message will not display properly\r\n    if (this._config.hideNativeValidation) {\r\n      // This position dont break render within input-group and is focusable\r\n      this._selectElement.style.position = \"absolute\";\r\n      this._selectElement.style.left = \"-9999px\";\r\n    } else {\r\n      // Hide but keep it focusable. If 0 height, no native validation message will show\r\n      // It is placed below so that native tooltip is displayed properly\r\n      // Flex basis is required for input-group otherwise it breaks the layout\r\n      this._selectElement.style.cssText = `height:1px;width:1px;opacity:0;padding:0;margin:0;border:0;float:left;flex-basis:100%;`;\r\n    }\r\n\r\n    // Make sure it's not usable using tab\r\n    this._selectElement.tabIndex = -1;\r\n\r\n    // No need for custom label click event if select is focusable\r\n    // const label = document.querySelector('label[for=\"' + this._selectElement.getAttribute(\"id\") + '\"]');\r\n    // if (label) {\r\n    //   label.addEventListener(\"click\", this);\r\n    // }\r\n\r\n    // It can be focused by clicking on the label\r\n    this._selectElement.addEventListener(\"focus\", (event) => {\r\n      this.onclick(event);\r\n    });\r\n\r\n    // When using regular html5 validation, make sure our fake element get the proper class\r\n    this._selectElement.addEventListener(\"invalid\", (event) => {\r\n      this._holderElement.classList.add(INVALID_CLASS);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Configure drop element\r\n   * Needs to be called after searchInput is created\r\n   */\r\n  _configureDropElement() {\r\n    this._dropElement = ce(\"ul\");\r\n    this._dropElement.classList.add(...[\"dropdown-menu\", CLASS_PREFIX + \"menu\", \"p-0\"]);\r\n    this._dropElement.id = CLASS_PREFIX + \"menu-\" + counter;\r\n    this._dropElement.setAttribute(\"role\", \"menu\");\r\n\r\n    const dropStyles = this._dropElement.style;\r\n    dropStyles.maxHeight = \"280px\";\r\n    if (!this._config.fullWidth) {\r\n      dropStyles.maxWidth = \"360px\";\r\n    }\r\n    if (this._config.fixed) {\r\n      dropStyles.position = \"fixed\";\r\n    }\r\n    dropStyles.overflowY = \"auto\";\r\n    // Prevent scrolling the menu from scrolling the page\r\n    // @link https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior\r\n    dropStyles.overscrollBehavior = \"contain\";\r\n    dropStyles.textAlign = \"unset\"; // otherwise RTL is not good\r\n\r\n    // If the mouse was outside, entering remove keyboard nav mode\r\n    this._dropElement.addEventListener(\"mouseenter\", (event) => {\r\n      this._keyboardNavigation = false;\r\n    });\r\n    this._holderElement.appendChild(this._dropElement);\r\n\r\n    // include aria-controls with the value of the id of the suggested list of values.\r\n    this._searchInput.setAttribute(\"aria-controls\", this._dropElement.id);\r\n  }\r\n\r\n  _configureHolderElement() {\r\n    this._holderElement.classList.add(...[\"form-control\", \"dropdown\"]);\r\n    // Reflect size\r\n    if (this._selectElement.classList.contains(\"form-select-lg\")) {\r\n      this._holderElement.classList.add(\"form-control-lg\");\r\n    }\r\n    if (this._selectElement.classList.contains(\"form-select-sm\")) {\r\n      this._holderElement.classList.add(\"form-control-sm\");\r\n    }\r\n    // If we have an overflow parent, we can simply inherit styles\r\n    if (this.overflowParent) {\r\n      this._holderElement.style.position = \"inherit\";\r\n    }\r\n    if (this._getBootstrapVersion() === 4) {\r\n      // Prevent fixed height due to form-control\r\n      this._holderElement.style.height = \"auto\";\r\n    }\r\n\r\n    // Without this, clicking on a floating label won't always focus properly\r\n    this._holderElement.addEventListener(\"click\", this);\r\n  }\r\n\r\n  _configureContainerElement() {\r\n    this._containerElement.addEventListener(\"click\", (event) => {\r\n      if (this.isDisabled()) {\r\n        return;\r\n      }\r\n      if (this._searchInput.style.visibility != \"hidden\") {\r\n        this._searchInput.focus();\r\n      }\r\n    });\r\n\r\n    // Add some extra css to help positioning\r\n    const containerStyles = this._containerElement.style;\r\n    containerStyles.display = \"flex\";\r\n    containerStyles.alignItems = \"center\";\r\n    containerStyles.flexWrap = \"wrap\";\r\n\r\n    // add initial values\r\n    // we use selectedOptions because single select can have a selected option\r\n    // without a selected attribute if it's the first value\r\n    const initialValues = this._selectElement.selectedOptions || [];\r\n    for (let j = 0; j < initialValues.length; j++) {\r\n      /**\r\n       * @type {HTMLOptionElement}\r\n       */\r\n      let initialValue = initialValues[j];\r\n      if (!initialValue.value) {\r\n        continue;\r\n      }\r\n\r\n      // Enforce selected attr for consistency\r\n      initialValue.setAttribute(\"selected\", \"selected\");\r\n\r\n      // track initial values for reset\r\n      initialValue.dataset.init = \"true\";\r\n      if (initialValue.hasAttribute(\"disabled\")) {\r\n        initialValue.dataset.disabled = \"true\";\r\n      }\r\n\r\n      // tooltips\r\n      if (initialValue.hasAttribute(\"title\")) {\r\n        initialValue.dataset.title = initialValue.getAttribute(\"title\");\r\n      }\r\n\r\n      this._createBadge(initialValue.textContent, initialValue.value, initialValue.dataset);\r\n    }\r\n  }\r\n\r\n  _configureSearchInput() {\r\n    this._searchInput = ce(\"input\");\r\n    this._searchInput.type = \"text\";\r\n    this._searchInput.autocomplete = \"field-\" + Date.now(); // off is ignored\r\n    this._searchInput.spellcheck = false;\r\n    // note: firefox doesn't support the properties so we use attributes\r\n    // @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-autocomplete\r\n    // @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded\r\n    // use the aria-expanded state on the element with role combobox to communicate that the list is displayed.\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/ariaLabel\r\n    attrs(this._searchInput, {\r\n      \"aria-auto-complete\": \"list\",\r\n      \"aria-has-popup\": \"menu\",\r\n      \"aria-expanded\": \"false\",\r\n      \"aria-label\": this._config.searchLabel,\r\n      role: \"combobox\",\r\n    });\r\n    this._searchInput.style.cssText = `background-color:transparent;color:currentColor;border:0;padding:0;outline:0;max-width:100%`;\r\n    this.resetSearchInput(true);\r\n\r\n    this._containerElement.appendChild(this._searchInput);\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Events\r\n\r\n  onfocus(event) {\r\n    if (this._willBlur) {\r\n      clearTimeout(this._willBlur);\r\n    }\r\n    this._holderElement.classList.add(FOCUS_CLASS);\r\n    this.showOrSearch();\r\n    this._config.onFocus(event, this);\r\n  }\r\n\r\n  onblur(event) {\r\n    // Prevent focus being triggered when clicking again\r\n    this._willBlur = setTimeout(() => {\r\n      // Cancel any pending request\r\n      if (this._abortController) {\r\n        this._abortController.abort();\r\n      }\r\n      let clearValidation = true;\r\n      if (this._config.addOnBlur && this._searchInput.value) {\r\n        clearValidation = this._enterValue();\r\n      }\r\n      this._holderElement.classList.remove(FOCUS_CLASS);\r\n      this.hideSuggestions(clearValidation);\r\n      if (this._fireEvents) {\r\n        const sel = this.getSelection();\r\n        const data = {\r\n          selection: sel ? sel.dataset.value : null,\r\n          input: this._searchInput.value,\r\n        };\r\n        this._config.onBlur(event, this);\r\n        this._selectElement.dispatchEvent(new CustomEvent(\"tags.blur\", { bubbles: true, detail: data }));\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  oninput(ev) {\r\n    const data = this._searchInput.value;\r\n\r\n    // Add item if a separator is used\r\n    // On mobile or copy paste, it can pass multiple chars (eg: when pressing space and it formats the string)\r\n    if (data) {\r\n      const lastChar = data.slice(-1);\r\n      if (this._config.separator.length && this._config.separator.includes(lastChar)) {\r\n        // Remove separator even if adding is prevented\r\n        this._searchInput.value = this._searchInput.value.slice(0, -1);\r\n        let value = this._searchInput.value;\r\n        let label = value;\r\n        let addData = {};\r\n        // There is no good reason to use the separator feature without allowNew, but who knows!\r\n        if (!this._config.allowNew) {\r\n          const sel = this.getSelection();\r\n          if (!sel) {\r\n            return;\r\n          }\r\n          value = sel.getAttribute(VALUE_ATTRIBUTE);\r\n          label = sel.dataset.label;\r\n        } else {\r\n          addData.new = 1;\r\n        }\r\n        this._add(label, value, addData);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Adjust input width to current content\r\n    setTimeout(() => {\r\n      this._adjustWidth();\r\n    });\r\n\r\n    // Check if we should display suggestions\r\n    this.showOrSearch();\r\n  }\r\n\r\n  /**\r\n   * keypress doesn't send arrow keys, so we use keydown\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  onkeydown(event) {\r\n    // Keycode reference : https://css-tricks.com/snippets/javascript/javascript-keycodes/\r\n    let key = event.keyCode || event.key;\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    // @ts-ignore\r\n    const target = event.target;\r\n\r\n    // Android virtual keyboard might always return 229\r\n    if (event.keyCode == 229) {\r\n      key = target.value.charAt(target.selectionStart - 1).charCodeAt(0);\r\n    }\r\n\r\n    // Keyboard keys\r\n    switch (key) {\r\n      case 13:\r\n      case \"Enter\":\r\n        event.preventDefault();\r\n        this._enterValue();\r\n        break;\r\n      case 38:\r\n      case \"ArrowUp\":\r\n        event.preventDefault();\r\n        this._keyboardNavigation = true;\r\n        this._moveSelection(PREV);\r\n        break;\r\n      case 40:\r\n      case \"ArrowDown\":\r\n        event.preventDefault();\r\n        this._keyboardNavigation = true;\r\n        if (this.isDropdownVisible()) {\r\n          this._moveSelection(NEXT);\r\n        } else {\r\n          // show menu regardless of input length\r\n          this.showOrSearch(false);\r\n        }\r\n        break;\r\n      case 8:\r\n      case \"Backspace\":\r\n        // If the current item is empty, remove the last one\r\n        if (this._searchInput.value.length == 0) {\r\n          this.removeLastItem();\r\n          this._adjustWidth();\r\n          this.showOrSearch();\r\n        }\r\n        break;\r\n      case 27:\r\n      case \"Escape\":\r\n        this._searchInput.focus();\r\n        this.hideSuggestions();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onmousemove(e) {\r\n    // Moving the mouse means no longer using keyboard\r\n    this._keyboardNavigation = false;\r\n  }\r\n\r\n  onscroll(e) {\r\n    this._positionMenu();\r\n  }\r\n\r\n  onresize(e) {\r\n    this._positionMenu();\r\n  }\r\n\r\n  onclick(e = null) {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (this.isSingle() || this.isMaxReached()) {\r\n      return;\r\n    }\r\n    // Focus on input when clicking on element or focusing select\r\n    this._searchInput.focus();\r\n  }\r\n\r\n  onreset(e) {\r\n    this.reset();\r\n  }\r\n\r\n  // #endregion\r\n\r\n  loadData() {\r\n    if (this._config.server) {\r\n      if (this._config.liveServer) {\r\n        // No need to load anything since it will happen when typing\r\n      } else {\r\n        this._loadFromServer();\r\n      }\r\n    } else {\r\n      this.resetSuggestions();\r\n    }\r\n  }\r\n\r\n  resetState() {\r\n    if (this.isDisabled()) {\r\n      this._holderElement.setAttribute(\"readonly\", \"\");\r\n      this._searchInput.setAttribute(\"disabled\", \"\");\r\n      this._holderElement.classList.add(DISABLED_CLASS);\r\n    } else {\r\n      rmAttr(this._holderElement, \"readonly\");\r\n      rmAttr(this._searchInput, \"disabled\");\r\n      this._holderElement.classList.remove(DISABLED_CLASS);\r\n    }\r\n  }\r\n\r\n  resetSuggestions() {\r\n    let suggestions = Array.from(this._selectElement.children)\r\n      .filter(\r\n        /**\r\n         * @param {HTMLOptionElement|HTMLOptGroupElement} option\r\n         */\r\n        (option) => {\r\n          return option instanceof HTMLOptGroupElement || !option.disabled || this._config.showDisabled;\r\n        }\r\n      )\r\n      .map(\r\n        /**\r\n         * @param {HTMLOptionElement|HTMLOptGroupElement} option\r\n         */\r\n        (option) => {\r\n          if (option instanceof HTMLOptGroupElement) {\r\n            return {\r\n              group: option.getAttribute(\"label\"),\r\n              items: option.children,\r\n            };\r\n          }\r\n          return {\r\n            value: option.getAttribute(\"value\"),\r\n            label: option.textContent,\r\n            disabled: option.disabled,\r\n            data: Object.assign(option.dataset),\r\n          };\r\n        }\r\n      );\r\n    this._buildSuggestions(suggestions);\r\n  }\r\n\r\n  /**\r\n   * Try to add the current value\r\n   * @returns {Boolean}\r\n   */\r\n  _enterValue() {\r\n    let selection = this.getSelection();\r\n    if (selection) {\r\n      selection.click();\r\n      return true;\r\n    } else {\r\n      // We use what is typed if not selected and not empty\r\n      if (this._config.allowNew && this._searchInput.value) {\r\n        let text = this._searchInput.value;\r\n        const el = this._add(text, text, { new: 1 });\r\n        return el ? true : false;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} show\r\n   */\r\n  _loadFromServer(show = false) {\r\n    if (this._abortController) {\r\n      this._abortController.abort();\r\n    }\r\n    this._abortController = new AbortController();\r\n\r\n    const params = Object.assign({}, this._config.serverParams);\r\n    // Pass current value\r\n    params[this._config.queryParam] = this._searchInput.value;\r\n    // Prevent caching\r\n    if (this._config.noCache) {\r\n      params.t = Date.now();\r\n    }\r\n    // We have a related field\r\n    if (params.related) {\r\n      /**\r\n       * @type {HTMLInputElement}\r\n       */\r\n      //@ts-ignore\r\n      const input = document.getElementById(params.related);\r\n      if (input) {\r\n        params.related = input.value;\r\n        const inputName = input.getAttribute(\"name\");\r\n        if (inputName) {\r\n          params[inputName] = input.value;\r\n        }\r\n      }\r\n    }\r\n\r\n    const urlParams = new URLSearchParams(params);\r\n    let url = this._config.server;\r\n    let fetchOptions = Object.assign(this._config.fetchOptions, {\r\n      method: this._config.serverMethod || \"GET\",\r\n      signal: this._abortController.signal,\r\n    });\r\n\r\n    if (fetchOptions.method === \"POST\") {\r\n      fetchOptions.body = urlParams;\r\n    } else {\r\n      url += \"?\" + urlParams.toString();\r\n    }\r\n\r\n    this._holderElement.classList.add(LOADING_CLASS);\r\n    fetch(url, fetchOptions)\r\n      .then((r) => this._config.onServerResponse(r, this))\r\n      .then((suggestions) => {\r\n        const data = suggestions[this._config.serverDataKey] || suggestions;\r\n\r\n        // initial suggestions\r\n        this._buildSuggestions(data);\r\n        this._abortController = null;\r\n        if (show) {\r\n          this._showSuggestions();\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        if (e.name === \"AbortError\") {\r\n          return;\r\n        }\r\n        console.error(e);\r\n      })\r\n      .finally((e) => {\r\n        this._holderElement.classList.remove(LOADING_CLASS);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Wrapper for the public addItem method that check if the item\r\n   * can be added\r\n   *\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @param {object} data\r\n   * @return {HTMLOptionElement|null}\r\n   */\r\n  _add(text, value = null, data = {}) {\r\n    if (!this.canAdd(text, data)) {\r\n      return null;\r\n    }\r\n    const el = this.addItem(text, value, data);\r\n    if (this._config.keepOpen) {\r\n      this._showSuggestions();\r\n    } else {\r\n      this.resetSearchInput();\r\n    }\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} li\r\n   * @returns {Boolean}\r\n   */\r\n  _isItemEnabled(li) {\r\n    if (li.style.display === \"none\") {\r\n      return false;\r\n    }\r\n    const fc = li.firstElementChild;\r\n    return fc.tagName === \"A\" && !fc.classList.contains(\"disabled\");\r\n  }\r\n\r\n  /**\r\n   * @param {String} dir\r\n   * @param {*|HTMLElement} sel\r\n   * @returns {HTMLElement}\r\n   */\r\n  _moveSelection(dir = NEXT, sel = null) {\r\n    const active = this.getSelection();\r\n\r\n    // select first li if visible\r\n    if (!active) {\r\n      // no active selection, cannot go back\r\n      if (dir === PREV) {\r\n        return sel;\r\n      }\r\n      // find first enabled item\r\n      if (!sel) {\r\n        sel = this._dropElement.firstChild;\r\n        while (sel && !this._isItemEnabled(sel)) {\r\n          sel = sel[\"nextSibling\"];\r\n        }\r\n      }\r\n    } else {\r\n      const sibling = dir === NEXT ? \"nextSibling\" : \"previousSibling\";\r\n\r\n      // Iterate over visible li\r\n      sel = active.parentNode;\r\n      do {\r\n        sel = sel[sibling];\r\n      } while (sel && !this._isItemEnabled(sel));\r\n\r\n      // We have a new selection\r\n      if (sel) {\r\n        // Remove classes from current active\r\n        active.classList.remove(...this._activeClasses());\r\n      } else if (active) {\r\n        // Use active element as selection\r\n        sel = active.parentElement;\r\n      }\r\n    }\r\n\r\n    if (sel) {\r\n      // Scroll if necessary\r\n      const selHeight = sel.offsetHeight;\r\n      const selTop = sel.offsetTop;\r\n      const parent = sel.parentNode;\r\n      const parentHeight = parent.offsetHeight;\r\n      const parentScrollHeight = parent.scrollHeight;\r\n      const parentTop = parent.offsetTop;\r\n\r\n      // Reset scroll, this can happen if menu was scrolled then hidden\r\n      if (selHeight === 0) {\r\n        setTimeout(() => {\r\n          parent.scrollTop = 0;\r\n        });\r\n      }\r\n\r\n      if (dir === PREV) {\r\n        // Don't use scrollIntoView as it scrolls the whole window\r\n        // Avoid minor top scroll due to headers\r\n        const scrollTop = selTop - parentTop > 10 ? selTop - parentTop : 0;\r\n        parent.scrollTop = scrollTop;\r\n      } else {\r\n        // This is the equivalent of scrollIntoView(false) but only for parent node\r\n        // Only scroll if the element is not visible\r\n        const scrollNeeded = selTop + selHeight - (parentHeight + parent.scrollTop);\r\n        if (scrollNeeded > 0 && selHeight > 0) {\r\n          parent.scrollTop = selTop + selHeight - parentHeight + 1;\r\n          // On last element, make sure we scroll the the bottom\r\n          if (parent.scrollTop + parentHeight >= parentScrollHeight - 10) {\r\n            parent.scrollTop = selTop - parentTop;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Adjust link\r\n      const a = sel.querySelector(\"a\");\r\n      a.classList.add(...this._activeClasses());\r\n      this._searchInput.setAttribute(\"aria-activedescendant\", a.id);\r\n      if (this._config.updateOnSelect) {\r\n        this._searchInput.value = a.dataset.label;\r\n        this._adjustWidth();\r\n      }\r\n    } else {\r\n      this._searchInput.setAttribute(\"aria-activedescendant\", \"\");\r\n    }\r\n    return sel;\r\n  }\r\n\r\n  /**\r\n   * Adjust the field to fit its content and show/hide placeholder if needed\r\n   */\r\n  _adjustWidth() {\r\n    this._holderElement.classList.remove(PLACEHOLDER_CLASS);\r\n    if (this._searchInput.value) {\r\n      this._searchInput.size = this._searchInput.value.length;\r\n    } else {\r\n      // Show the placeholder only if empty\r\n      if (this.getSelectedValues().length) {\r\n        this._searchInput.placeholder = \"\";\r\n        this._searchInput.size = 1;\r\n      } else {\r\n        this._searchInput.size = this._config.placeholder.length > 0 ? this._config.placeholder.length : 1;\r\n        this._searchInput.placeholder = this._config.placeholder;\r\n        this._holderElement.classList.add(PLACEHOLDER_CLASS);\r\n      }\r\n    }\r\n\r\n    // If the string contains ascii chars or strange font, input size may be wrong\r\n    // We cannot only rely on the size attribute\r\n    const v = this._searchInput.value || this._searchInput.placeholder;\r\n    const computedFontSize = window.getComputedStyle(this._holderElement).fontSize;\r\n    const w = calcTextWidth(v, computedFontSize) + 16;\r\n    this._searchInput.style.width = w + \"px\"; // Don't use minWidth as it would prevent using maxWidth\r\n  }\r\n\r\n  /**\r\n   * Add suggestions to the drop element\r\n   * @param {Array} suggestions\r\n   */\r\n  _buildSuggestions(suggestions) {\r\n    while (this._dropElement.lastChild) {\r\n      this._dropElement.removeChild(this._dropElement.lastChild);\r\n    }\r\n    let idx = 0;\r\n    let groupId = 1; // start at one, because data-id = \"\" + 0 doesn't do anything\r\n    for (let i = 0; i < suggestions.length; i++) {\r\n      const suggestion = suggestions[i];\r\n\r\n      // Handle optgroups\r\n      if (suggestion[\"group\"]) {\r\n        const newChild = ce(\"li\");\r\n        newChild.setAttribute(\"role\", \"presentation\");\r\n        newChild.dataset.id = \"\" + groupId;\r\n        const newChildSpan = ce(\"span\");\r\n        newChild.append(newChildSpan);\r\n        newChildSpan.classList.add(...[\"dropdown-header\", \"text-truncate\"]);\r\n        newChildSpan.innerHTML = suggestion[\"group\"];\r\n        this._dropElement.appendChild(newChild);\r\n\r\n        if (suggestion[\"items\"]) {\r\n          for (let j = 0; j < suggestion[\"items\"].length; j++) {\r\n            const groupSuggestion = suggestion[\"items\"][j];\r\n            groupSuggestion.group_id = groupId;\r\n            this._buildSuggestionsItem(suggestion[\"items\"][j], idx);\r\n            idx++;\r\n          }\r\n        }\r\n\r\n        groupId++;\r\n      }\r\n\r\n      this._buildSuggestionsItem(suggestion, idx);\r\n      idx++;\r\n    }\r\n\r\n    // Create the not found message\r\n    if (this._config.notFoundMessage) {\r\n      const notFound = ce(\"li\");\r\n      notFound.setAttribute(\"role\", \"presentation\");\r\n      notFound.classList.add(CLASS_PREFIX + \"not-found\");\r\n      // Actual message is refreshed on typing, but we need item for consistency\r\n      notFound.innerHTML = `<span class=\"dropdown-item\"></span>`;\r\n      this._dropElement.appendChild(notFound);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Suggestion} suggestion\r\n   * @param {Number} i\r\n   */\r\n  _buildSuggestionsItem(suggestion, i) {\r\n    if (!suggestion[this._config.valueField]) {\r\n      return;\r\n    }\r\n\r\n    const value = suggestion[this._config.valueField];\r\n    const label = suggestion[this._config.labelField];\r\n\r\n    // initial selection from remote data (only works if live server is disabled)\r\n    if (this._config.server && !this._config.liveServer) {\r\n      if (suggestion.selected || this._config.selected.includes(value)) {\r\n        // We need _add to create an actual option so we can track it for reset later\r\n        const added = this._add(label, value, suggestion.data);\r\n        // track for reset\r\n        if (added) {\r\n          added.dataset.init = \"true\";\r\n        }\r\n      }\r\n    }\r\n\r\n    let textContent = this._config.onRenderItem(suggestion, label, this);\r\n\r\n    const newChild = ce(\"li\");\r\n    newChild.setAttribute(\"role\", \"presentation\");\r\n    if (suggestion.group_id) {\r\n      newChild.setAttribute(\"data-group-id\", \"\" + suggestion.group_id);\r\n    }\r\n    const newChildLink = ce(\"a\");\r\n    newChild.append(newChildLink);\r\n    newChildLink.id = this._dropElement.id + \"-\" + i;\r\n    newChildLink.classList.add(...[\"dropdown-item\", \"text-truncate\"]);\r\n    if (suggestion.disabled) {\r\n      newChildLink.classList.add(...[\"disabled\"]);\r\n    }\r\n    newChildLink.setAttribute(VALUE_ATTRIBUTE, value);\r\n    newChildLink.dataset.label = label;\r\n    this._config.searchFields.forEach((sf) => {\r\n      newChild.dataset[sf] = suggestion[sf];\r\n    });\r\n    newChildLink.setAttribute(\"href\", \"#\");\r\n    newChildLink.innerHTML = textContent;\r\n    this._dropElement.appendChild(newChild);\r\n\r\n    // Hover sets active item\r\n    newChildLink.addEventListener(\"mouseenter\", (event) => {\r\n      // Don't trigger enter if using arrows\r\n      if (this._keyboardNavigation) {\r\n        return;\r\n      }\r\n      this.removeSelection();\r\n      newChild.querySelector(\"a\").classList.add(...this._activeClasses());\r\n    });\r\n    newChildLink.addEventListener(\"mousedown\", (event) => {\r\n      // Otherwise searchInput would lose focus and close the menu\r\n      event.preventDefault();\r\n    });\r\n    newChildLink.addEventListener(\"click\", (event) => {\r\n      event.preventDefault();\r\n      this._add(label, value, suggestion.data);\r\n      this._config.onSelectItem(suggestion, this);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {NodeListOf<HTMLOptionElement>}\r\n   */\r\n  initialOptions() {\r\n    return this._selectElement.querySelectorAll(\"option[data-init]\");\r\n  }\r\n\r\n  reset() {\r\n    this.removeAll();\r\n\r\n    // Reset doesn't fire change event\r\n    this._fireEvents = false;\r\n    const opts = this.initialOptions();\r\n    for (let j = 0; j < opts.length; j++) {\r\n      const iv = opts[j];\r\n      this.addItem(iv.textContent, iv.value, iv.dataset);\r\n    }\r\n    this._adjustWidth();\r\n    this._fireEvents = true;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} init Pass true during init\r\n   */\r\n  resetSearchInput(init = false) {\r\n    this._searchInput.value = \"\";\r\n    this._adjustWidth();\r\n\r\n    if (!init) {\r\n      this.hideSuggestions();\r\n      // Trigger input even to show suggestions if needed when focused\r\n      if (this._searchInput === document.activeElement) {\r\n        this._searchInput.dispatchEvent(new Event(\"input\"));\r\n      }\r\n    }\r\n\r\n    // We use visibility instead of display to keep layout intact\r\n    if (this.isMaxReached()) {\r\n      this._searchInput.style.visibility = \"hidden\";\r\n    } else if (this._searchInput.style.visibility == \"hidden\") {\r\n      this._searchInput.style.visibility = \"visible\";\r\n    }\r\n\r\n    if (this.isSingle() && !init) {\r\n      //@ts-ignore\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Array}\r\n   */\r\n  getSelectedValues() {\r\n    // option[selected] is used rather that selectedOptions as it works more consistently\r\n    /**\r\n     * @type {NodeListOf<HTMLOptionElement>}\r\n     */\r\n    const selected = this._selectElement.querySelectorAll(\"option[selected]\");\r\n    return Array.from(selected).map((el) => el.value);\r\n  }\r\n\r\n  /**\r\n   * @returns {Array}\r\n   */\r\n  getAvailableValues() {\r\n    /**\r\n     * @type {NodeListOf<HTMLOptionElement>}\r\n     */\r\n    const selected = this._selectElement.querySelectorAll(\"option\");\r\n    return Array.from(selected).map((el) => el.value);\r\n  }\r\n\r\n  /**\r\n   * Show suggestions or search them depending on live server\r\n   * @param {Boolean} check\r\n   */\r\n  showOrSearch(check = true) {\r\n    if (check && !this._shouldShow()) {\r\n      // focusing should not clear validation\r\n      this.hideSuggestions(false);\r\n      return;\r\n    }\r\n    if (this._config.liveServer) {\r\n      this._searchFunc();\r\n    } else {\r\n      this._showSuggestions();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The element create with buildSuggestions\r\n   * @param {Boolean} clearValidation\r\n   */\r\n  hideSuggestions(clearValidation = true) {\r\n    this._dropElement.classList.remove(SHOW_CLASS);\r\n    attrs(this._searchInput, {\r\n      \"aria-expanded\": \"false\",\r\n    });\r\n    this.removeSelection();\r\n    if (clearValidation) {\r\n      this._holderElement.classList.remove(INVALID_CLASS);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show or hide suggestions\r\n   * @param {Boolean} check\r\n   * @param {Boolean} clearValidation\r\n   */\r\n  toggleSuggestions(check = true, clearValidation = true) {\r\n    if (this._dropElement.classList.contains(SHOW_CLASS)) {\r\n      this.hideSuggestions(clearValidation);\r\n    } else {\r\n      this.showOrSearch(check);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Do we have enough input to show suggestions ?\r\n   * @returns {Boolean}\r\n   */\r\n  _shouldShow() {\r\n    if (this.isDisabled()) {\r\n      return false;\r\n    }\r\n    if (this._config.maximumItems > 0 && this.getSelectedValues().length >= this._config.maximumItems) {\r\n      return false;\r\n    }\r\n    return this._searchInput.value.length >= this._config.suggestionsThreshold;\r\n  }\r\n\r\n  /**\r\n   * The element create with buildSuggestions\r\n   */\r\n  _showSuggestions() {\r\n    // It's not focused anymore\r\n    if (document.activeElement != this._searchInput) {\r\n      return;\r\n    }\r\n    // Never show suggestions if you cannot add new values\r\n    if (this._searchInput.style.visibility == \"hidden\") {\r\n      return;\r\n    }\r\n\r\n    const lookup = normalize(this._searchInput.value);\r\n\r\n    // Get current values\r\n    const values = this.getSelectedValues();\r\n\r\n    // Filter the list according to search string\r\n    const list = this._dropElement.querySelectorAll(\"li\");\r\n    let count = 0;\r\n    let firstItem = null;\r\n    let hasPossibleValues = false;\r\n    let visibleGroups = {};\r\n    for (let i = 0; i < list.length; i++) {\r\n      /**\r\n       * @type {HTMLLIElement}\r\n       */\r\n      let item = list[i];\r\n      /**\r\n       * @type {HTMLAnchorElement|HTMLSpanElement}\r\n       */\r\n      //@ts-ignore\r\n      let link = item.firstElementChild;\r\n\r\n      // This is the empty result message or a header\r\n      if (link instanceof HTMLSpanElement) {\r\n        // We will show it later\r\n        if (item.dataset.id) {\r\n          visibleGroups[item.dataset.id] = false;\r\n        }\r\n        hideItem(item);\r\n        continue;\r\n      }\r\n\r\n      // Remove previous selection\r\n      link.classList.remove(...this._activeClasses());\r\n\r\n      // Hide selected values\r\n      if (!this._config.allowSame && values.indexOf(link.getAttribute(VALUE_ATTRIBUTE)) != -1) {\r\n        hideItem(item);\r\n        continue;\r\n      }\r\n\r\n      // Check search length since we can trigger dropdown with arrow\r\n      const showAllSuggestions = this._config.showAllSuggestions || lookup.length === 0;\r\n      // Do we find a matching string or do we display immediately ?\r\n      let isMatched = lookup.length == 0 && this._config.suggestionsThreshold === 0;\r\n      if (!showAllSuggestions && lookup.length > 0) {\r\n        // match on any field\r\n        this._config.searchFields.forEach((sf) => {\r\n          const text = normalize(link.dataset[sf]);\r\n          const found = this._config.fuzzy ? fuzzyMatch(text, lookup) : text.indexOf(lookup) >= 0;\r\n          if (found) {\r\n            isMatched = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      const selectFirst = isMatched || lookup.length === 0;\r\n      if (showAllSuggestions || isMatched) {\r\n        count++;\r\n        showItem(item);\r\n        if (item.dataset.groupId) {\r\n          visibleGroups[item.dataset.groupId] = true;\r\n        }\r\n        // Only select as first item if its matching or no lookup\r\n        if (!firstItem && this._isItemEnabled(item) && selectFirst) {\r\n          firstItem = item;\r\n        }\r\n        if (this._config.maximumItems > 0 && count > this._config.maximumItems) {\r\n          hideItem(item);\r\n        }\r\n      } else {\r\n        hideItem(item);\r\n      }\r\n\r\n      if (this._config.highlightTyped) {\r\n        // using .textContent removes any html that can be present (eg: mark added through highlightTyped)\r\n        const textContent = link.textContent;\r\n        const idx = normalize(textContent).indexOf(lookup);\r\n        const highlighted =\r\n          textContent.substring(0, idx) +\r\n          `<mark>${textContent.substring(idx, idx + lookup.length)}</mark>` +\r\n          textContent.substring(idx + lookup.length, textContent.length);\r\n        link.innerHTML = highlighted;\r\n      }\r\n\r\n      if (this._isItemEnabled(item)) {\r\n        hasPossibleValues = true;\r\n      }\r\n    }\r\n\r\n    // No item and we don't allow new items => error\r\n    if (!this._config.allowNew && !(lookup.length === 0 && !hasPossibleValues)) {\r\n      this._holderElement.classList.add(INVALID_CLASS);\r\n    }\r\n\r\n    // If we allow new elements, regex validation should happen on canAdd instead\r\n    if (this._config.allowNew && this._config.regex && this.isInvalid()) {\r\n      this._holderElement.classList.remove(INVALID_CLASS);\r\n    }\r\n\r\n    // Show all groups with visible values\r\n    Array.from(list)\r\n      .filter((li) => {\r\n        return li.dataset.id;\r\n      })\r\n      .forEach((li) => {\r\n        if (visibleGroups[li.dataset.id] === true) {\r\n          showItem(li);\r\n        }\r\n      });\r\n\r\n    if (hasPossibleValues) {\r\n      // Remove validation message if we show selectable values\r\n      this._holderElement.classList.remove(INVALID_CLASS);\r\n\r\n      // Autoselect first\r\n      if (firstItem && this._config.autoselectFirst) {\r\n        this.removeSelection();\r\n        this._moveSelection(NEXT, firstItem);\r\n      }\r\n    }\r\n\r\n    // Remove dropdown if list is empty\r\n    if (count === 0) {\r\n      if (this._config.notFoundMessage) {\r\n        /**\r\n         * @type {HTMLElement}\r\n         */\r\n        const notFound = this._dropElement.querySelector(\".\" + CLASS_PREFIX + \"not-found\");\r\n        notFound.style.display = \"block\";\r\n        const notFoundMessage = this._config.notFoundMessage.replace(\"{{tag}}\", this._searchInput.value);\r\n        notFound.innerHTML = `<span class=\"dropdown-item\">${notFoundMessage}</span>`;\r\n        this._showDropdown();\r\n      } else {\r\n        // Remove dropdown if not found (do not clear validation)\r\n        this.hideSuggestions(false);\r\n      }\r\n    } else {\r\n      // Or show it if necessary\r\n      this._showDropdown();\r\n    }\r\n  }\r\n\r\n  _showDropdown() {\r\n    this._dropElement.classList.add(SHOW_CLASS);\r\n    attrs(this._searchInput, {\r\n      \"aria-expanded\": \"true\",\r\n    });\r\n    this._positionMenu();\r\n  }\r\n\r\n  _positionMenu() {\r\n    const styles = window.getComputedStyle(this._searchInput);\r\n    const bounds = this._searchInput.getBoundingClientRect();\r\n    const isRTL = styles.direction === \"rtl\";\r\n\r\n    let left = null;\r\n    let top = null;\r\n\r\n    if (this._config.fixed) {\r\n      // In full width, use holder as left reference, otherwise use input\r\n      if (this._config.fullWidth) {\r\n        const holderBounds = this._holderElement.getBoundingClientRect();\r\n        left = holderBounds.x;\r\n      } else {\r\n        left = bounds.x;\r\n      }\r\n      top = bounds.y + bounds.height;\r\n    } else {\r\n      // When positioning is not fixed, we leave it up to the browser\r\n      // it may not work in complex situations with scrollable overflows, etc\r\n      if (this._config.fullWidth) {\r\n        // Stick it at the start\r\n        left = 0;\r\n      } else {\r\n        // Position next to input (offsetLeft != bounds.x)\r\n        left = this._searchInput.offsetLeft;\r\n      }\r\n    }\r\n\r\n    // Align end\r\n    if (isRTL && !this._config.fullWidth) {\r\n      left -= this._dropElement.offsetWidth - bounds.width;\r\n    }\r\n\r\n    // Horizontal overflow\r\n    if (!this._config.fullWidth) {\r\n      const w = Math.min(window.innerWidth, document.body.offsetWidth);\r\n      const hdiff = isRTL\r\n        ? bounds.x + bounds.width - this._dropElement.offsetWidth - 1\r\n        : w - 1 - (bounds.x + this._dropElement.offsetWidth);\r\n      if (hdiff < 0) {\r\n        left = isRTL ? left - hdiff : left + hdiff;\r\n      }\r\n    }\r\n\r\n    // Reset any height overflow adjustement\r\n    this._dropElement.style.transform = \"unset\";\r\n\r\n    // Use full holder width\r\n    if (this._config.fullWidth) {\r\n      this._dropElement.style.width = this._holderElement.offsetWidth + \"px\";\r\n    }\r\n\r\n    // Position element\r\n    if (left !== null) {\r\n      this._dropElement.style.left = left + \"px\";\r\n    }\r\n    if (top !== null) {\r\n      this._dropElement.style.top = top + \"px\";\r\n    }\r\n\r\n    // Overflow height\r\n    const dropBounds = this._dropElement.getBoundingClientRect();\r\n    const h = window.innerHeight;\r\n\r\n    // We display above input if it overflows\r\n    if (dropBounds.y + dropBounds.height > h) {\r\n      this._dropElement.style.transform = \"translateY(calc(-100% - \" + this._searchInput.offsetHeight + \"px))\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   */\r\n  _getBootstrapVersion() {\r\n    let ver = 5;\r\n    // If we have jQuery and the tooltip plugin for BS4\r\n    //@ts-ignore\r\n    if (window.jQuery && $.fn.tooltip != undefined && $.fn.tooltip.Constructor != undefined) {\r\n      //@ts-ignore\r\n      ver = parseInt($.fn.tooltip.Constructor.VERSION.charAt(0));\r\n    }\r\n    return ver;\r\n  }\r\n\r\n  /**\r\n   * Find if label is already selected (based on attribute)\r\n   * @param {string} text\r\n   * @returns {Boolean}\r\n   */\r\n  _isSelected(text) {\r\n    const opt = Array.from(this._selectElement.querySelectorAll(\"option\")).find((el) => el.textContent == text);\r\n    if (opt && opt.getAttribute(\"selected\")) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks if value matches a configured regex\r\n   * @param {string} value\r\n   * @returns {Boolean}\r\n   */\r\n  _validateRegex(value) {\r\n    const regex = new RegExp(this._config.regex.trim());\r\n    return regex.test(value);\r\n  }\r\n\r\n  /**\r\n   * @returns {HTMLElement}\r\n   */\r\n  getSelection() {\r\n    return this._dropElement.querySelector(\"a.\" + ACTIVE_CLASS);\r\n  }\r\n\r\n  removeSelection() {\r\n    const selection = this.getSelection();\r\n    if (selection) {\r\n      selection.classList.remove(...this._activeClasses());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Array}\r\n   */\r\n  _activeClasses() {\r\n    return [...this._config.activeClasses, ...[ACTIVE_CLASS]];\r\n  }\r\n\r\n  /**\r\n   * @deprecated since 1.5\r\n   * @returns {HTMLElement}\r\n   */\r\n  getActiveSelection() {\r\n    return this.getSelection();\r\n  }\r\n\r\n  /**\r\n   * @deprecated since 1.5\r\n   */\r\n  removeActiveSelection() {\r\n    return this.removeSelection();\r\n  }\r\n\r\n  removeAll() {\r\n    let items = this.getSelectedValues();\r\n    items.forEach((item) => {\r\n      this.removeItem(item, true);\r\n    });\r\n    this._adjustWidth();\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} noEvents\r\n   */\r\n  removeLastItem(noEvents = false) {\r\n    let items = this._containerElement.querySelectorAll(\"span:not(.disabled)\");\r\n    if (!items.length) {\r\n      return;\r\n    }\r\n    let lastItem = items[items.length - 1];\r\n    this.removeItem(lastItem.getAttribute(VALUE_ATTRIBUTE), noEvents);\r\n  }\r\n\r\n  enable() {\r\n    this._selectElement.setAttribute(\"disabled\", \"\");\r\n    this.resetState();\r\n  }\r\n\r\n  disable() {\r\n    rmAttr(this._selectElement, \"disabled\");\r\n    this.resetState();\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isDisabled() {\r\n    return this._selectElement.hasAttribute(\"disabled\") || this._selectElement.disabled || this._selectElement.hasAttribute(\"readonly\");\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isDropdownVisible() {\r\n    return this._dropElement.classList.contains(SHOW_CLASS);\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isInvalid() {\r\n    return this._holderElement.classList.contains(INVALID_CLASS);\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isSingle() {\r\n    return !this._selectElement.hasAttribute(\"multiple\");\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isMaxReached() {\r\n    return this._config.max && this.getSelectedValues().length >= this._config.max;\r\n  }\r\n\r\n  /**\r\n   * @param {string} text\r\n   * @param {Object} data\r\n   * @returns {Boolean}\r\n   */\r\n  canAdd(text, data = {}) {\r\n    // Check invalid input\r\n    if (!text) {\r\n      return false;\r\n    }\r\n    // Check disabled\r\n    if (this.isDisabled()) {\r\n      return false;\r\n    }\r\n    // Check already selected input (single will replace)\r\n    if (!this.isSingle() && !this._config.allowSame && this._isSelected(text)) {\r\n      return false;\r\n    }\r\n    // Check for max\r\n    if (this.isMaxReached()) {\r\n      return false;\r\n    }\r\n    // Check for regex on new input\r\n    if (this._config.regex && data.new && !this._validateRegex(text)) {\r\n      this._holderElement.classList.add(INVALID_CLASS);\r\n      return false;\r\n    }\r\n    // Check for custom validation\r\n    if (this._config.onCanAdd && this._config.onCanAdd(text, data, this) === false) {\r\n      this._holderElement.classList.add(INVALID_CLASS);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * You might want to use canAdd before to ensure the item is valid\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @param {object} data\r\n   * @return {HTMLOptionElement} The created or selected option\r\n   */\r\n  addItem(text, value = null, data = {}) {\r\n    if (!value) {\r\n      value = text;\r\n    }\r\n\r\n    // Single items remove first\r\n    if (this.isSingle() && this.getSelectedValues().length) {\r\n      this.removeLastItem(true);\r\n    }\r\n\r\n    // Keep in mind that we can have the same value for multiple options\r\n    // escape invalid characters for HTML attributes: \\' \" = < > ` &.'\r\n    const escapedValue = CSS.escape(value);\r\n    let opts = this._selectElement.querySelectorAll('option[value=\"' + escapedValue + '\"]');\r\n    /**\r\n     * @type {HTMLOptionElement}\r\n     */\r\n    let opt = null;\r\n    if (this._config.allowSame) {\r\n      // Match same items by content\r\n      opts.forEach(\r\n        /**\r\n         * @param {HTMLOptionElement} o\r\n         */\r\n        (o) => {\r\n          if (o.textContent === text && !o.selected) {\r\n            opt = o;\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      //@ts-ignore\r\n      opt = opts[0] || null;\r\n    }\r\n\r\n    // we need to create a new option\r\n    if (!opt) {\r\n      opt = ce(\"option\");\r\n      opt.value = value;\r\n      opt.textContent = text; // innerText is not well supported by jsdom\r\n      // Pass along data provided\r\n      for (const [key, value] of Object.entries(data)) {\r\n        opt.dataset[key] = value;\r\n      }\r\n      this._selectElement.appendChild(opt);\r\n      this._config.onCreateItem(opt, this);\r\n    }\r\n\r\n    if (opt) {\r\n      data = Object.assign(\r\n        {\r\n          title: opt.getAttribute(\"title\"),\r\n        },\r\n        data,\r\n        opt.dataset\r\n      );\r\n    }\r\n    // update select, we need to set attribute for option[selected]\r\n    opt.setAttribute(\"selected\", \"selected\");\r\n    opt.selected = true;\r\n\r\n    // mobile safari is doing it's own crazy thing...\r\n    // without this, it wil not pick up the proper state of the select element and validation will fail\r\n    const html = this._selectElement.innerHTML;\r\n    this._selectElement.innerHTML = \"\";\r\n    this._selectElement.innerHTML = html;\r\n\r\n    this._createBadge(text, value, data);\r\n\r\n    // Fire change event\r\n    if (this._fireEvents) {\r\n      this._selectElement.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n    }\r\n\r\n    return opt;\r\n  }\r\n\r\n  /**\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @param {object} data\r\n   */\r\n  _createBadge(text, value = null, data = {}) {\r\n    const bver = this._getBootstrapVersion();\r\n    const allowClear = this._config.allowClear && !data.disabled;\r\n\r\n    // create span\r\n    let html = text;\r\n    let span = ce(\"span\");\r\n    let classes = [\"badge\"];\r\n    let badgeStyle = this._config.badgeStyle;\r\n    if (data.badgeStyle) {\r\n      badgeStyle = data.badgeStyle;\r\n    }\r\n    if (data.badgeClass) {\r\n      classes.push(...data.badgeClass.split(\" \"));\r\n    }\r\n    if (this._config.baseClass) {\r\n      // custom style\r\n      classes.push(...this._config.baseClass.split(\" \"));\r\n    } else if (bver === 5) {\r\n      // https://getbootstrap.com/docs/5.3/components/badge/\r\n      // add extra classes to avoid any layout issues due to very large labels\r\n      classes = [...classes, ...[\"bg-\" + badgeStyle, \"mw-100\", \"overflow-x-hidden\"]];\r\n    } else {\r\n      // https://getbootstrap.com/docs/4.6/components/badge/\r\n      classes = [...classes, ...[\"badge-\" + badgeStyle]];\r\n    }\r\n\r\n    if (data.disabled) {\r\n      classes.push(...[\"disabled\", \"opacity-50\"]);\r\n    }\r\n\r\n    // We cannot really rely on classes to get a proper sizing\r\n    span.style.margin = \"2px 6px 2px 0px\";\r\n    // Use logical styles for RTL support\r\n    span.style.marginBlock = \"2px\";\r\n    span.style.marginInline = \"0px 6px\";\r\n    span.classList.add(...classes);\r\n    span.setAttribute(VALUE_ATTRIBUTE, value);\r\n    // Tooltips\r\n    if (data.title) {\r\n      span.setAttribute(\"title\", data.title);\r\n    }\r\n\r\n    if (allowClear) {\r\n      const closeClass = classes.includes(\"text-dark\") ? \"btn-close\" : \"btn-close-white\";\r\n      let btnMargin;\r\n      let btnFloat;\r\n      if (this._config.clearEnd) {\r\n        btnMargin = bver === 5 ? \"ms-2\" : \"ml-2\";\r\n        btnFloat = bver === 5 ? \"float-end\" : \"float:right;\";\r\n      } else {\r\n        btnMargin = bver === 5 ? \"me-2\" : \"mr-2\";\r\n        btnFloat = bver === 5 ? \"float-start\" : \"float:left;\";\r\n      }\r\n      const btn =\r\n        bver === 5\r\n          ? '<button type=\"button\" style=\"font-size:0.65em\" class=\"' +\r\n            btnMargin +\r\n            \" \" +\r\n            btnFloat +\r\n            \" btn-close \" +\r\n            closeClass +\r\n            '\" aria-label=\"' +\r\n            this._config.clearLabel +\r\n            '\"></button>'\r\n          : '<button type=\"button\" style=\"font-size:1em;' +\r\n            btnFloat +\r\n            'text-shadow:none;color:currentColor;transform:scale(1.2)\" class=\"' +\r\n            btnMargin +\r\n            ' close\" aria-label=\"' +\r\n            this._config.clearLabel +\r\n            '\"><span aria-hidden=\"true\">&times;</span></button>';\r\n      html = btn + html;\r\n    }\r\n\r\n    span.innerHTML = html;\r\n    this._containerElement.insertBefore(span, this._searchInput);\r\n    if (window.bootstrap && window.bootstrap.Tooltip) {\r\n      window.bootstrap.Tooltip.getOrCreateInstance(span);\r\n    }\r\n\r\n    if (allowClear) {\r\n      span.querySelector(\"button\").addEventListener(\"click\", (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!this.isDisabled()) {\r\n          this.removeItem(value);\r\n          //@ts-ignore\r\n          document.activeElement.blur();\r\n          this._adjustWidth();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   * @param {Boolean} value\r\n   */\r\n  removeItem(value, noEvents = false) {\r\n    // Remove badge if any\r\n    // escape invalid characters for HTML attributes: \\' \" = < > ` &.'\r\n    const escapedValue = CSS.escape(value);\r\n    let item = this._containerElement.querySelector(\"span[\" + VALUE_ATTRIBUTE + '=\"' + escapedValue + '\"]');\r\n    if (!item) {\r\n      return;\r\n    }\r\n    item.remove();\r\n\r\n    // update select\r\n    /**\r\n     * @type {HTMLOptionElement}\r\n     */\r\n    let opt = this._selectElement.querySelector('option[value=\"' + escapedValue + '\"][selected]');\r\n\r\n    if (opt) {\r\n      rmAttr(opt, \"selected\");\r\n      opt.selected = false;\r\n\r\n      // Fire change event\r\n      if (this._fireEvents && !noEvents) {\r\n        this._selectElement.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n      }\r\n    }\r\n\r\n    // Make input visible\r\n    if (this._searchInput.style.visibility == \"hidden\" && !this.isMaxReached()) {\r\n      this._searchInput.style.visibility = \"visible\";\r\n    }\r\n\r\n    if (!noEvents) {\r\n      this._config.onClearItem(value, this);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Tags;\r\n"],
  "mappings": "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",
  "names": ["DEFAULTS", "item", "label", "inst", "value", "option", "event", "text", "data", "response", "CLASS_PREFIX", "LOADING_CLASS", "ACTIVE_CLASS", "INVALID_CLASS", "SHOW_CLASS", "VALUE_ATTRIBUTE", "NEXT", "PREV", "FOCUS_CLASS", "PLACEHOLDER_CLASS", "DISABLED_CLASS", "INSTANCE_MAP", "counter", "debounce", "func", "timeout", "timer", "args", "calcTextWidth", "size", "span", "ce", "width", "removeDiacritics", "str", "normalize", "fuzzyMatch", "lookup", "pos", "c", "hideItem", "attrs", "showItem", "el", "k", "v", "rmAttr", "attr", "tagName", "Tags", "config", "_selectElement", "_willBlur", "_configure", "_keyboardNavigation", "_searchFunc", "_loadFromServer", "_config", "_fireEvents", "_configureParent", "_holderElement", "_containerElement", "_configureHolderElement", "_configureContainerElement", "_configureSelectElement", "_configureSearchInput", "_configureDropElement", "_searchInput", "_dropElement", "selector", "opts", "list", "i", "_timer", "o", "parseBool", "key", "defaultValue", "separator", "r", "p", "_getPlaceholder", "firstOption", "dropStyles", "_getBootstrapVersion", "containerStyles", "initialValues", "j", "initialValue", "_createBadge", "_abortController", "clearValidation", "_enterValue", "sel", "ev", "lastChar", "addData", "_add", "_adjustWidth", "target", "_moveSelection", "e", "_positionMenu", "suggestions", "_buildSuggestions", "selection", "show", "params", "input", "inputName", "urlParams", "url", "fetchOptions", "_showSuggestions", "_isItemEnabled", "li", "fc", "dir", "active", "sibling", "_activeClasses", "selHeight", "selTop", "parent", "parentHeight", "parentScrollHeight", "parentTop", "scrollTop", "a", "computedFontSize", "w", "idx", "groupId", "suggestion", "newChild", "newChildSpan", "groupSuggestion", "_buildSuggestionsItem", "notFound", "added", "textContent", "newChildLink", "sf", "iv", "init", "selected", "check", "_shouldShow", "values", "count", "firstItem", "hasPossibleValues", "visibleGroups", "link", "showAllSuggestions", "isMatched", "selectFirst", "highlighted", "notFoundMessage", "_showDropdown", "styles", "bounds", "isRTL", "left", "top", "hdiff", "dropBounds", "h", "ver", "_isSelected", "opt", "_validateRegex", "noEvents", "items", "lastItem", "escapedValue", "html", "bver", "allowClear", "classes", "badgeStyle", "closeClass", "btnMargin", "btnFloat", "tags_default"]
}
